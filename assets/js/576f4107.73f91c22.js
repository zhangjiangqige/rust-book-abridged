"use strict";(self.webpackChunkrust_book_abridged=self.webpackChunkrust_book_abridged||[]).push([[392],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(l,".").concat(m)]||u[m]||c[m]||i;return n?a.createElement(h,r(r({ref:t},d),{},{components:n})):a.createElement(h,r({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,r[1]=s;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4302:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const i={},r="Appendix E - Editions",s={unversionedId:"zz-appendix/appendix-05-editions",id:"zz-appendix/appendix-05-editions",title:"Appendix E - Editions",description:'This appendix was copied directly from "The Rust Programming Language".',source:"@site/docs/zz-appendix/appendix-05-editions.md",sourceDirName:"zz-appendix",slug:"/zz-appendix/appendix-05-editions",permalink:"/rust-book-abridged/zz-appendix/appendix-05-editions",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/zz-appendix/appendix-05-editions.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Appendix D - Useful Development Tools",permalink:"/rust-book-abridged/zz-appendix/appendix-04-useful-development-tools"},next:{title:"Licenses",permalink:"/rust-book-abridged/zz-appendix/appendix-06-licenses"}},l={},p=[],d={toc:p},u="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"appendix-e---editions"},"Appendix E - Editions"),(0,o.kt)("p",null,"This appendix was copied directly from ",(0,o.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/stable/book/appendix-05-editions.html"},'"The Rust Programming Language"'),"."),(0,o.kt)("p",null,"In Chapter 1, you saw that ",(0,o.kt)("inlineCode",{parentName:"p"},"cargo new")," adds a bit of metadata to your\n",(0,o.kt)("em",{parentName:"p"},"Cargo.toml")," file about an edition. This appendix talks about what that means!"),(0,o.kt)("p",null,'The Rust language and compiler have a six-week release cycle, meaning users get\na constant stream of new features. Other programming languages release larger\nchanges less often; Rust releases smaller updates more frequently. After a\nwhile, all of these tiny changes add up. But from release to release, it can be\ndifficult to look back and say, "Wow, between Rust 1.10 and Rust 1.31, Rust has\nchanged a lot!"'),(0,o.kt)("p",null,"Every two or three years, the Rust team produces a new Rust ",(0,o.kt)("em",{parentName:"p"},"edition"),". Each\nedition brings together the features that have landed into a clear package with\nfully updated documentation and tooling. New editions ship as part of the usual\nsix-week release process."),(0,o.kt)("p",null,"Editions serve different purposes for different people:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"For active Rust users, a new edition brings together incremental changes into\nan easy-to-understand package."),(0,o.kt)("li",{parentName:"ul"},"For non-users, a new edition signals that some major advancements have\nlanded, which might make Rust worth another look."),(0,o.kt)("li",{parentName:"ul"},"For those developing Rust, a new edition provides a rallying point for the\nproject as a whole.")),(0,o.kt)("p",null,"At the time of this writing, three Rust editions are available: Rust 2015, Rust\n2018, and Rust 2021. This book is written using Rust 2021 edition idioms."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"edition")," key in ",(0,o.kt)("em",{parentName:"p"},"Cargo.toml")," indicates which edition the compiler should\nuse for your code. If the key doesn't exist, Rust uses ",(0,o.kt)("inlineCode",{parentName:"p"},"2015")," as the edition\nvalue for backward compatibility reasons."),(0,o.kt)("p",null,"Each project can opt in to an edition other than the default 2015 edition.\nEditions can contain incompatible changes, such as including a new keyword that\nconflicts with identifiers in code. However, unless you opt in to those\nchanges, your code will continue to compile even as you upgrade the Rust\ncompiler version you use."),(0,o.kt)("p",null,"All Rust compiler versions support any edition that existed prior to that\ncompiler's release, and they can link crates of any supported editions\ntogether. Edition changes only affect the way the compiler initially parses\ncode. Therefore, if you're using Rust 2015 and one of your dependencies uses\nRust 2018, your project will compile and be able to use that dependency. The\nopposite situation, where your project uses Rust 2018 and a dependency uses\nRust 2015, works as well."),(0,o.kt)("p",null,"To be clear: most features will be available on all editions. Developers using\nany Rust edition will continue to see improvements as new stable releases are\nmade. However, in some cases, mainly when new keywords are added, some new\nfeatures might only be available in later editions. You will need to switch\neditions if you want to take advantage of such features."),(0,o.kt)("p",null,"For more details, the ",(0,o.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/stable/edition-guide/"},(0,o.kt)("em",{parentName:"a"},"Edition\nGuide"))," is a complete book\nabout editions that enumerates the differences between editions and explains\nhow to automatically upgrade your code to a new edition via ",(0,o.kt)("inlineCode",{parentName:"p"},"cargo fix"),"."))}c.isMDXComponent=!0}}]);